{
  "openapi": "3.0.1",
  "info": {
    "title": "ATLAS field_data Service Template API",
    "version": "0.3.11"
  },
  "externalDocs": {
    "description": "Service Template Document",
    "url": "https://htmlpreview.github.io/?https://github.com/atlasH2020-templates/field_data/blob/v0.3.11/doc.html"
  },
  "tags": [
    {
      "name": "Base Field Operations"
    },
    {
      "name": "Crop Information"
    },
    {
      "name": "Driving Path"
    },
    {
      "name": "Application Results"
    },
    {
      "name": "Subscriptions"
    }
  ],
  "paths": {
    "/groups": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Base Field Operations"
        ],
        "summary": "List groups (list_groups)",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  },
                  "example": [
                    {
                      "id": "68C13D4F-55CC-45A4-A20F-3167941A52E7",
                      "name": "annual crops"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/fields": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Base Field Operations"
        ],
        "summary": "List fields (list_fields)",
        "parameters": [
          {
            "description": "Id of a group for which the fields are to be listed.",
            "name": "group_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  },
                  "example": [
                    {
                      "urn": "urn:com.agricircle.atlas.field_data:FDBE6F55-6179-4B88-9177-4AFBED33ADAC",
                      "name": "field by the pond",
                      "boundaries": {
                        "type": "Polygon",
                        "coordinates": [
                          [
                            [
                              8.475152850151062,
                              47.47213709091847
                            ],
                            [
                              8.475152850151062,
                              47.47213709091847
                            ],
                            [
                              8.475104570388794,
                              47.47222049049008
                            ],
                            [
                              8.475152850151062,
                              47.47213709091847
                            ]
                          ]
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/fields/{urn}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Base Field Operations"
        ],
        "summary": "Retrieve base information for a field (get_field_info)",
        "parameters": [
          {
            "name": "urn",
            "description": "The URN (urn:<service_id>:<internal_id>) of a field.",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FieldURN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                },
                "example": {
                  "urn": "urn:com.agricircle.atlas.field_data:FDBE6F55-6179-4B88-9177-4AFBED33ADAC",
                  "name": "field by the pond",
                  "boundaries": {
                    "type": "Polygon",
                    "coordinates": [
                      [
                        [
                          8.475152850151062,
                          47.47213709091847
                        ],
                        [
                          8.475152850151062,
                          47.47213709091847
                        ],
                        [
                          8.475104570388794,
                          47.47222049049008
                        ],
                        [
                          8.475152850151062,
                          47.47213709091847
                        ]
                      ]
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The field was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/fields/{urn}/driving_path": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Driving Path"
        ],
        "summary": "Retrieve driving path information for field (get_driving_path)",
        "parameters": [
          {
            "description": "The URN (urn:<service_id>:<internal_id>) of a field.",
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FieldURN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ab_line": {
                      "description": "GeoJSON line with 2 points.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "pattern": "^LineString$"
                        },
                        "coordinates": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "minItems": 2,
                              "maxItems": 2
                            },
                            "minItems": 2,
                            "maxItems": 2
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "ab_line": {
                      "type": "LineString",
                      "coordinates": [
                        [
                          8.475152850151062,
                          47.47213709091847
                        ],
                        [
                          8.475152850151062,
                          47.47213709091847
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No driving path is configured."
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The field was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/fields/{urn}/crops": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Crop Information"
        ],
        "summary": "Returns information on crops over time in the field (get_crop_history)",
        "parameters": [
          {
            "description": "The URN (urn:<service_id>:<internal_id>) of a field.",
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FieldURN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CropArray"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The field was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/fields/{urn}/crops/{date}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Crop Information"
        ],
        "summary": "Returns detailed information on the active crop at the given date (get_crop_details)",
        "parameters": [
          {
            "description": "The URN (urn:<service_id>:<internal_id>) of a field.",
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FieldURN"
            }
          },
          {
            "description": "ISO 8601 date for which crop details are requested.",
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropDetails"
                  }
                },
                "example": [
                  {
                    "id": "1.1.1.1",
                    "name": "Winter wheat",
                    "season_start_date": "2021-04-23"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The field was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/fields/{urn}/application_results": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Application Results"
        ],
        "summary": "Retrieve field application results of a given type (get_application_results).",
        "parameters": [
          {
            "description": "The URN (urn:<service_id>:<internal_id>) of a field.",
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FieldURN"
            }
          },
          {
            "description": "The type of application that generated the results.",
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ApplicationType"
            }
          },
          {
            "description": "ISO 8601 UTC date/time from which to retrieve application results.",
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-04-23T18:00:00Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResults"
                },
                "example": [
                  {
                    "date": "2021-04-23T18:25:43.511Z",
                    "application_type": "fertilisation",
                    "application_info": {
                      "data_layers": [
                        "N",
                        "P2O5",
                        "K2O"
                      ],
                      "product": {
                        "name": "some product",
                        "unit": "kg",
                        "amount": 3243,
                        "nutrients": {
                          "N": 200,
                          "P2O5": 50,
                          "K2O": 5,
                          "Mg": 3.5
                        }
                      }
                    },
                    "download_url": "https://atlas_participant.com/fields/B9C44906-250F-445F-99FC-42A182806649.gpkg"
                  },
                  {
                    "date": "2021-04-23T22:00:00.000Z",
                    "application_type": "irrigation",
                    "application_info": {
                    },
                    "download_url": "https://atlas_participant.com/fields/70CA5EA6-BD0C-4467-ACB9-903C6B55F7FD.gpkg"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The field was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Application Results"
        ],
        "summary": "Adds an application result on a field (add_application_result)",
        "parameters": [
          {
            "description": "The URN (urn:<service_id>:<internal_id>) of a field.",
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FieldURN"
            }
          }
        ],
        "requestBody": {
          "description": "Use *application/json* variant only when there is no detailed application GeoPackage file.",
          "required": true,
          "content": {
            "application/geopackage+sqlite3": {
              "schema": {
                "type": "string",
                "format": "byte",
                "description": "Type-specific GeoPackage (see detailed specifications for specific conventions).",
                "example": "<binary gpkg data>"
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 UTC date/time at which the application took place."
                  },
                  "application_type": {
                    "$ref": "#/components/schemas/ApplicationType"
                  },
                  "application_info": {
                    "type": "object",
                    "description": "Application-specific additional properties (see detailed specifications)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application result uploaded."
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The field was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Subscriptions"
        ],
        "summary": "Registers a notification URL that will be invoked whenever changes occurs in fields (subscribe).",
        "operationId": "subscribe",
        "requestBody": {
          "description": "Subscription parameters.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "A subscription's notification_url is invoked with a POST (WITHOUT Authorization headers), containing a Notification request body (see schema below)."
                  }
                },
                "required": [
                  "notification_url"
                ],
                "example": {
                  "notification_url": "https://acme.com/my_notification_handler"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The service-generated id for the new subscription."
                    },
                    "expiration_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date at which the subscription expires (auto-delete)."
                    }
                  }
                },
                "example": {
                  "id": "550ef2f0-02b6-40b2-bed9-e20816d20255",
                  "expiration_date": "2021-05-23T18:25:43.511Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                },
                "example": {
                  "message": "A subscription already exists for this notification_url",
                  "errors": [
                    "550ef2f0-02b6-40b2-bed9-e20816d20255"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Subscriptions"
        ],
        "summary": "Refreshes an existing subscription (refresh_subscription)",
        "operationId": "refresh_subscription",
        "parameters": [
          {
            "description": "The id of a subscription.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "expiration_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 UTC date/time at which the subscription expires (auto-delete)."
                    }
                  }
                },
                "example": {
                  "id": "550ef2f0-02b6-40b2-bed9-e20816d20255",
                  "expiration_date": "2021-06-23T18:25:43.511Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The subscription was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "410": {
            "description": "The subscription is expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Subscriptions"
        ],
        "summary": "Cancels a previously created subscription (unsubscribe)",
        "operationId": "unsubscribe",
        "parameters": [
          {
            "description": "The id of a subscription.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation."
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "The subscription was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "urn": {
            "$ref": "#/components/schemas/FieldURN"
          },
          "name": {
            "type": "string",
            "description": "Human readable name for a field."
          },
          "archived": {
            "type": "boolean",
            "default": false,
            "description": "If true (default is false), the information can be retrieved but the field should not be used for new operations."
          },
          "boundaries": {
            "description": "GeoJSON Polygon (may have holes). Services must enforce that boundaries are immutable and can never be edited even within their proprietary UI.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "pattern": "^Polygon$"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Must have 2 items for lat/long or 3 items for lat/long/elevation."
                  },
                  "description": "First element is outer boundary, optional addition elements are holes."
                }
              }
            }
          },
          "crop_id": {
            "type": "string",
            "description": "FAO identifier for current primary crop."
          },
          "secondary_crop_id": {
            "type": "string",
            "description": "FAO identifier for current secondary crop."
          },
          "groups": {
            "description": "Group(s) to which this field is associated to.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "urn",
          "name",
          "boundaries"
        ]
      },
      "Crop": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "FAO identifier for primary crop."
          },
          "name": {
            "type": "string",
            "description": "Human readable name."
          },
          "secondary_id": {
            "type": "string",
            "description": "FAO identifier for secondary crop."
          },
          "secondary_name": {
            "type": "string",
            "description": "Human readable name."
          },
          "season_start_date": {
            "type": "string",
            "format": "date",
            "description": "Season start date for the crop (e.g. last harvest date)."
          },
          "residue_management": {
            "type": "string",
            "enum": [
              "leave_distribute",
              "leave_incorporate",
              "leave_mulch",
              "leave_burn",
              "remove_dont_use",
              "remove_use",
              "remove_sell",
              "remove_compost",
              "remove_forced_aeration_compost"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "season_start_date"
        ],
        "example": {
          "id": "1.1.1.1",
          "name": "Winter wheat",
          "season_start_date": "2021-07-23"
        }
      },
      "CropArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Crop"
        },
        "example": [
          {
            "id": "1.1.1.2",
            "name": "Spring wheat",
            "season_start_date": "2020-03-05"
          },
          {
            "id": "1.1.1.1",
            "name": "Winter wheat",
            "season_start_date": "2021-09-23"
          }
        ]
      },
      "CropDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Crop"
          },
          {
            "type": "object",
            "properties": {
              "layout": {
                "description": "GeoJSON MultiPoligon representing the seedable areas of the field, such as vineyard rows, individual trees, etc.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "^MultiPolygon$"
                  },
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "description": "Must have 2 items for lat/long or 3 items for lat/long/elevation."
                        },
                        "description": "First element is outer boundary, optional addition elements are holes."
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ApplicationType": {
        "type": "string",
        "enum": [
          "fertilisation",
          "crop_protection",
          "irrigation",
          "harvesting",
          "sowing",
          "tillage",
          "other"
        ]
      },
      "FieldURN": {
        "type": "string",
        "pattern": "^urn:[a-z][a-z0-9_.\\-]*:[\\w-.]+",
        "description": "Uniform resource name of a field with the syntax `urn:<service_id>:<internal_id>`. <service_id> must be the id of a valid and active ATLAS service."
      },
      "ApplicationResults": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 UTC date/time at which the application took place."
            },
            "application_type": {
              "$ref": "#/components/schemas/ApplicationType"
            },
            "application_info": {
              "type": "object",
              "description": "Application-specific additional properties (see detailed specifications)."
            },
            "download_url": {
              "type": "string",
              "format": "uri",
              "description": "URL to download the application result GeoPackage file."
            }
          },
          "required": [
            "date",
            "application_type",
            "application_info"
          ]
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 UTC date/time before which the subscription must be refreshed."
          },
          "notification_url": {
            "type": "string",
            "format": "uri",
            "description": "URL where change notifications will be posted."
          }
        }
      },
      "Notification": {
        "description": "Payload sent when invoking notification_url.",
        "type": "object",
        "properties": {
          "subscription_id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 UTC date/time at which the notification was originally triggered (regardless of retries)."
          },
          "urn": {
            "type": "string",
            "description": "The URN of the field (urn:<service_id>:<internal_id>)."
          },
          "event": {
            "type": "string",
            "enum": [
              "CREATED",
              "DELETED",
              "UPDATED"
            ]
          },
          "changes": {
            "description": "Attribute group where a change occurred (only present when event=UPDATED).",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "base",
                "crop",
                "driving_path",
                "applications"
              ],
              "example": "crop"
            }
          }
        }
      },
      "DetailedError": {
        "type": "object",
        "description": "This defines the structure of an error payload when one is present. Actual messages and additional error information content may change from one implementation to another.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description."
          },
          "status": {
            "type": "string",
            "format": "number",
            "description": "HTTP error code."
          },
          "error_url": {
            "type": "string",
            "format": "uri",
            "description": "A service's proprietary UI url where the user may navigate to view additional information or be prompted for additional actions to deal with the error. A well-behaved FMIS will present his users with a visual indication and the means to click on this link when this attribute is present."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional detailed information."
          }
        },
        "required": [
          "message"
        ],
        "example": {
          "message": "this is a sample error message",
          "errors": [
            "this is an example of additional error information"
          ]
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
